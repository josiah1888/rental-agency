{"version":3,"file":"router.umd.js","sources":["src/facade/lang.js","src/facade/collection.js","src/facade/promise.js","src/facade/async.js","src/segments.js","src/metadata/metadata.js","src/constants.js","src/recognize.js","src/link.js","src/lifecycle_reflector.js","src/router.js","src/core_private.js","src/metadata/decorators.js","src/router_url_serializer.js","src/router_providers_common.js","src/router_providers.js","src/directives/router_outlet.js","src/directives/router_link.js","index.js"],"sourcesContent":["var globalScope;\nif (typeof window === 'undefined') {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n        // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n        globalScope = self;\n    }\n    else {\n        globalScope = global;\n    }\n}\nelse {\n    globalScope = window;\n}\nexport function scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\nexport const IS_DART = false;\n// Need to declare a new variable for global here since TypeScript\n// exports the original value of the symbol.\nvar _global = globalScope;\nexport { _global as global };\nexport var Type = Function;\nexport function getTypeNameForDebugging(type) {\n    if (type['name']) {\n        return type['name'];\n    }\n    return typeof type;\n}\nexport var Math = _global.Math;\nexport var Date = _global.Date;\nvar _devMode = true;\nvar _modeLocked = false;\nexport function lockMode() {\n    _modeLocked = true;\n}\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n */\nexport function enableProdMode() {\n    if (_modeLocked) {\n        // Cannot use BaseException as that ends up importing from facade/lang.\n        throw 'Cannot enable prod mode after platform setup.';\n    }\n    _devMode = false;\n}\nexport function assertionsEnabled() {\n    return _devMode;\n}\n// TODO: remove calls to assert in production environment\n// Note: Can't just export this and import in in other files\n// as `assert` is a reserved keyword in Dart\n_global.assert = function assert(condition) {\n    // TODO: to be fixed properly via #2830, noop for now\n};\nexport function isPresent(obj) {\n    return obj !== undefined && obj !== null;\n}\nexport function isBlank(obj) {\n    return obj === undefined || obj === null;\n}\nexport function isBoolean(obj) {\n    return typeof obj === \"boolean\";\n}\nexport function isNumber(obj) {\n    return typeof obj === \"number\";\n}\nexport function isString(obj) {\n    return typeof obj === \"string\";\n}\nexport function isFunction(obj) {\n    return typeof obj === \"function\";\n}\nexport function isType(obj) {\n    return isFunction(obj);\n}\nexport function isStringMap(obj) {\n    return typeof obj === 'object' && obj !== null;\n}\nconst STRING_MAP_PROTO = Object.getPrototypeOf({});\nexport function isStrictStringMap(obj) {\n    return isStringMap(obj) && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\nexport function isPromise(obj) {\n    return obj instanceof _global.Promise;\n}\nexport function isArray(obj) {\n    return Array.isArray(obj);\n}\nexport function isDate(obj) {\n    return obj instanceof Date && !isNaN(obj.valueOf());\n}\nexport function noop() { }\nexport function stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token === undefined || token === null) {\n        return '' + token;\n    }\n    if (token.name) {\n        return token.name;\n    }\n    if (token.overriddenName) {\n        return token.overriddenName;\n    }\n    var res = token.toString();\n    var newLineIndex = res.indexOf(\"\\n\");\n    return (newLineIndex === -1) ? res : res.substring(0, newLineIndex);\n}\n// serialize / deserialize enum exist only for consistency with dart API\n// enums in typescript don't need to be serialized\nexport function serializeEnum(val) {\n    return val;\n}\nexport function deserializeEnum(val, values) {\n    return val;\n}\nexport function resolveEnumToken(enumValue, val) {\n    return enumValue[val];\n}\nexport class StringWrapper {\n    static fromCharCode(code) { return String.fromCharCode(code); }\n    static charCodeAt(s, index) { return s.charCodeAt(index); }\n    static split(s, regExp) { return s.split(regExp); }\n    static equals(s, s2) { return s === s2; }\n    static stripLeft(s, charVal) {\n        if (s && s.length) {\n            var pos = 0;\n            for (var i = 0; i < s.length; i++) {\n                if (s[i] != charVal)\n                    break;\n                pos++;\n            }\n            s = s.substring(pos);\n        }\n        return s;\n    }\n    static stripRight(s, charVal) {\n        if (s && s.length) {\n            var pos = s.length;\n            for (var i = s.length - 1; i >= 0; i--) {\n                if (s[i] != charVal)\n                    break;\n                pos--;\n            }\n            s = s.substring(0, pos);\n        }\n        return s;\n    }\n    static replace(s, from, replace) {\n        return s.replace(from, replace);\n    }\n    static replaceAll(s, from, replace) {\n        return s.replace(from, replace);\n    }\n    static slice(s, from = 0, to = null) {\n        return s.slice(from, to === null ? undefined : to);\n    }\n    static replaceAllMapped(s, from, cb) {\n        return s.replace(from, function (...matches) {\n            // Remove offset & string from the result array\n            matches.splice(-2, 2);\n            // The callback receives match, p1, ..., pn\n            return cb(matches);\n        });\n    }\n    static contains(s, substr) { return s.indexOf(substr) != -1; }\n    static compare(a, b) {\n        if (a < b) {\n            return -1;\n        }\n        else if (a > b) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\nexport class StringJoiner {\n    constructor(parts = []) {\n        this.parts = parts;\n    }\n    add(part) { this.parts.push(part); }\n    toString() { return this.parts.join(\"\"); }\n}\nexport class NumberParseError extends Error {\n    constructor(message) {\n        super();\n        this.message = message;\n    }\n    toString() { return this.message; }\n}\nexport class NumberWrapper {\n    static toFixed(n, fractionDigits) { return n.toFixed(fractionDigits); }\n    static equal(a, b) { return a === b; }\n    static parseIntAutoRadix(text) {\n        var result = parseInt(text);\n        if (isNaN(result)) {\n            throw new NumberParseError(\"Invalid integer literal when parsing \" + text);\n        }\n        return result;\n    }\n    static parseInt(text, radix) {\n        if (radix == 10) {\n            if (/^(\\-|\\+)?[0-9]+$/.test(text)) {\n                return parseInt(text, radix);\n            }\n        }\n        else if (radix == 16) {\n            if (/^(\\-|\\+)?[0-9ABCDEFabcdef]+$/.test(text)) {\n                return parseInt(text, radix);\n            }\n        }\n        else {\n            var result = parseInt(text, radix);\n            if (!isNaN(result)) {\n                return result;\n            }\n        }\n        throw new NumberParseError(\"Invalid integer literal when parsing \" + text + \" in base \" +\n            radix);\n    }\n    // TODO: NaN is a valid literal but is returned by parseFloat to indicate an error.\n    static parseFloat(text) { return parseFloat(text); }\n    static get NaN() { return NaN; }\n    static isNaN(value) { return isNaN(value); }\n    static isInteger(value) { return Number.isInteger(value); }\n}\nexport var RegExp = _global.RegExp;\nexport class RegExpWrapper {\n    static create(regExpStr, flags = '') {\n        flags = flags.replace(/g/g, '');\n        return new _global.RegExp(regExpStr, flags + 'g');\n    }\n    static firstMatch(regExp, input) {\n        // Reset multimatch regex state\n        regExp.lastIndex = 0;\n        return regExp.exec(input);\n    }\n    static test(regExp, input) {\n        regExp.lastIndex = 0;\n        return regExp.test(input);\n    }\n    static matcher(regExp, input) {\n        // Reset regex state for the case\n        // someone did not loop over all matches\n        // last time.\n        regExp.lastIndex = 0;\n        return { re: regExp, input: input };\n    }\n    static replaceAll(regExp, input, replace) {\n        let c = regExp.exec(input);\n        let res = '';\n        regExp.lastIndex = 0;\n        let prev = 0;\n        while (c) {\n            res += input.substring(prev, c.index);\n            res += replace(c);\n            prev = c.index + c[0].length;\n            regExp.lastIndex = prev;\n            c = regExp.exec(input);\n        }\n        res += input.substring(prev);\n        return res;\n    }\n}\nexport class RegExpMatcherWrapper {\n    static next(matcher) {\n        return matcher.re.exec(matcher.input);\n    }\n}\nexport class FunctionWrapper {\n    static apply(fn, posArgs) { return fn.apply(null, posArgs); }\n}\n// JS has NaN !== NaN\nexport function looseIdentical(a, b) {\n    return a === b || typeof a === \"number\" && typeof b === \"number\" && isNaN(a) && isNaN(b);\n}\n// JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\nexport function getMapKey(value) {\n    return value;\n}\nexport function normalizeBlank(obj) {\n    return isBlank(obj) ? null : obj;\n}\nexport function normalizeBool(obj) {\n    return isBlank(obj) ? false : obj;\n}\nexport function isJsObject(o) {\n    return o !== null && (typeof o === \"function\" || typeof o === \"object\");\n}\nexport function print(obj) {\n    console.log(obj);\n}\nexport function warn(obj) {\n    console.warn(obj);\n}\n// Can't be all uppercase as our transpiler would think it is a special directive...\nexport class Json {\n    static parse(s) { return _global.JSON.parse(s); }\n    static stringify(data) {\n        // Dart doesn't take 3 arguments\n        return _global.JSON.stringify(data, null, 2);\n    }\n}\nexport class DateWrapper {\n    static create(year, month = 1, day = 1, hour = 0, minutes = 0, seconds = 0, milliseconds = 0) {\n        return new Date(year, month - 1, day, hour, minutes, seconds, milliseconds);\n    }\n    static fromISOString(str) { return new Date(str); }\n    static fromMillis(ms) { return new Date(ms); }\n    static toMillis(date) { return date.getTime(); }\n    static now() { return new Date(); }\n    static toJson(date) { return date.toJSON(); }\n}\nexport function setValueOnPath(global, path, value) {\n    var parts = path.split('.');\n    var obj = global;\n    while (parts.length > 1) {\n        var name = parts.shift();\n        if (obj.hasOwnProperty(name) && isPresent(obj[name])) {\n            obj = obj[name];\n        }\n        else {\n            obj = obj[name] = {};\n        }\n    }\n    if (obj === undefined || obj === null) {\n        obj = {};\n    }\n    obj[parts.shift()] = value;\n}\nvar _symbolIterator = null;\nexport function getSymbolIterator() {\n    if (isBlank(_symbolIterator)) {\n        if (isPresent(globalScope.Symbol) && isPresent(Symbol.iterator)) {\n            _symbolIterator = Symbol.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nexport function evalExpression(sourceUrl, expr, declarations, vars) {\n    var fnBody = `${declarations}\\nreturn ${expr}\\n//# sourceURL=${sourceUrl}`;\n    var fnArgNames = [];\n    var fnArgValues = [];\n    for (var argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    return new Function(...fnArgNames.concat(fnBody))(...fnArgValues);\n}\nexport function isPrimitive(obj) {\n    return !isJsObject(obj);\n}\nexport function hasConstructor(value, type) {\n    return value.constructor === type;\n}\nexport function bitWiseOr(values) {\n    return values.reduce((a, b) => { return a | b; });\n}\nexport function bitWiseAnd(values) {\n    return values.reduce((a, b) => { return a & b; });\n}\nexport function escape(s) {\n    return _global.encodeURI(s);\n}\n//# sourceMappingURL=lang.js.map","import { isJsObject, global, isPresent, isBlank, isArray, getSymbolIterator } from './lang';\nexport var Map = global.Map;\nexport var Set = global.Set;\n// Safari and Internet Explorer do not support the iterable parameter to the\n// Map constructor.  We work around that by manually adding the items.\nvar createMapFromPairs = (function () {\n    try {\n        if (new Map([[1, 2]]).size === 1) {\n            return function createMapFromPairs(pairs) { return new Map(pairs); };\n        }\n    }\n    catch (e) {\n    }\n    return function createMapAndPopulateFromPairs(pairs) {\n        var map = new Map();\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            map.set(pair[0], pair[1]);\n        }\n        return map;\n    };\n})();\nvar createMapFromMap = (function () {\n    try {\n        if (new Map(new Map())) {\n            return function createMapFromMap(m) { return new Map(m); };\n        }\n    }\n    catch (e) {\n    }\n    return function createMapAndPopulateFromMap(m) {\n        var map = new Map();\n        m.forEach((v, k) => { map.set(k, v); });\n        return map;\n    };\n})();\nvar _clearValues = (function () {\n    if ((new Map()).keys().next) {\n        return function _clearValues(m) {\n            var keyIterator = m.keys();\n            var k;\n            while (!((k = keyIterator.next()).done)) {\n                m.set(k.value, null);\n            }\n        };\n    }\n    else {\n        return function _clearValuesWithForeEach(m) {\n            m.forEach((v, k) => { m.set(k, null); });\n        };\n    }\n})();\n// Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n// TODO(mlaval): remove the work around once we have a working polyfill of Array.from\nvar _arrayFromMap = (function () {\n    try {\n        if ((new Map()).values().next) {\n            return function createArrayFromMap(m, getValues) {\n                return getValues ? Array.from(m.values()) : Array.from(m.keys());\n            };\n        }\n    }\n    catch (e) {\n    }\n    return function createArrayFromMapWithForeach(m, getValues) {\n        var res = ListWrapper.createFixedSize(m.size), i = 0;\n        m.forEach((v, k) => {\n            res[i] = getValues ? v : k;\n            i++;\n        });\n        return res;\n    };\n})();\nexport class MapWrapper {\n    static clone(m) { return createMapFromMap(m); }\n    static createFromStringMap(stringMap) {\n        var result = new Map();\n        for (var prop in stringMap) {\n            result.set(prop, stringMap[prop]);\n        }\n        return result;\n    }\n    static toStringMap(m) {\n        var r = {};\n        m.forEach((v, k) => r[k] = v);\n        return r;\n    }\n    static createFromPairs(pairs) { return createMapFromPairs(pairs); }\n    static clearValues(m) { _clearValues(m); }\n    static iterable(m) { return m; }\n    static keys(m) { return _arrayFromMap(m, false); }\n    static values(m) { return _arrayFromMap(m, true); }\n}\n/**\n * Wraps Javascript Objects\n */\nexport class StringMapWrapper {\n    static create() {\n        // Note: We are not using Object.create(null) here due to\n        // performance!\n        // http://jsperf.com/ng2-object-create-null\n        return {};\n    }\n    static contains(map, key) {\n        return map.hasOwnProperty(key);\n    }\n    static get(map, key) {\n        return map.hasOwnProperty(key) ? map[key] : undefined;\n    }\n    static set(map, key, value) { map[key] = value; }\n    static keys(map) { return Object.keys(map); }\n    static values(map) {\n        return Object.keys(map).reduce((r, a) => {\n            r.push(map[a]);\n            return r;\n        }, []);\n    }\n    static isEmpty(map) {\n        for (var prop in map) {\n            return false;\n        }\n        return true;\n    }\n    static delete(map, key) { delete map[key]; }\n    static forEach(map, callback) {\n        for (var prop in map) {\n            if (map.hasOwnProperty(prop)) {\n                callback(map[prop], prop);\n            }\n        }\n    }\n    static merge(m1, m2) {\n        var m = {};\n        for (var attr in m1) {\n            if (m1.hasOwnProperty(attr)) {\n                m[attr] = m1[attr];\n            }\n        }\n        for (var attr in m2) {\n            if (m2.hasOwnProperty(attr)) {\n                m[attr] = m2[attr];\n            }\n        }\n        return m;\n    }\n    static equals(m1, m2) {\n        var k1 = Object.keys(m1);\n        var k2 = Object.keys(m2);\n        if (k1.length != k2.length) {\n            return false;\n        }\n        var key;\n        for (var i = 0; i < k1.length; i++) {\n            key = k1[i];\n            if (m1[key] !== m2[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexport class ListWrapper {\n    // JS has no way to express a statically fixed size list, but dart does so we\n    // keep both methods.\n    static createFixedSize(size) { return new Array(size); }\n    static createGrowableSize(size) { return new Array(size); }\n    static clone(array) { return array.slice(0); }\n    static forEachWithIndex(array, fn) {\n        for (var i = 0; i < array.length; i++) {\n            fn(array[i], i);\n        }\n    }\n    static first(array) {\n        if (!array)\n            return null;\n        return array[0];\n    }\n    static last(array) {\n        if (!array || array.length == 0)\n            return null;\n        return array[array.length - 1];\n    }\n    static indexOf(array, value, startIndex = 0) {\n        return array.indexOf(value, startIndex);\n    }\n    static contains(list, el) { return list.indexOf(el) !== -1; }\n    static reversed(array) {\n        var a = ListWrapper.clone(array);\n        return a.reverse();\n    }\n    static concat(a, b) { return a.concat(b); }\n    static insert(list, index, value) { list.splice(index, 0, value); }\n    static removeAt(list, index) {\n        var res = list[index];\n        list.splice(index, 1);\n        return res;\n    }\n    static removeAll(list, items) {\n        for (var i = 0; i < items.length; ++i) {\n            var index = list.indexOf(items[i]);\n            list.splice(index, 1);\n        }\n    }\n    static remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n            return true;\n        }\n        return false;\n    }\n    static clear(list) { list.length = 0; }\n    static isEmpty(list) { return list.length == 0; }\n    static fill(list, value, start = 0, end = null) {\n        list.fill(value, start, end === null ? list.length : end);\n    }\n    static equals(a, b) {\n        if (a.length != b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (a[i] !== b[i])\n                return false;\n        }\n        return true;\n    }\n    static slice(l, from = 0, to = null) {\n        return l.slice(from, to === null ? undefined : to);\n    }\n    static splice(l, from, length) { return l.splice(from, length); }\n    static sort(l, compareFn) {\n        if (isPresent(compareFn)) {\n            l.sort(compareFn);\n        }\n        else {\n            l.sort();\n        }\n    }\n    static toString(l) { return l.toString(); }\n    static toJSON(l) { return JSON.stringify(l); }\n    static maximum(list, predicate) {\n        if (list.length == 0) {\n            return null;\n        }\n        var solution = null;\n        var maxValue = -Infinity;\n        for (var index = 0; index < list.length; index++) {\n            var candidate = list[index];\n            if (isBlank(candidate)) {\n                continue;\n            }\n            var candidateValue = predicate(candidate);\n            if (candidateValue > maxValue) {\n                solution = candidate;\n                maxValue = candidateValue;\n            }\n        }\n        return solution;\n    }\n    static flatten(list) {\n        var target = [];\n        _flattenArray(list, target);\n        return target;\n    }\n    static addAll(list, source) {\n        for (var i = 0; i < source.length; i++) {\n            list.push(source[i]);\n        }\n    }\n}\nfunction _flattenArray(source, target) {\n    if (isPresent(source)) {\n        for (var i = 0; i < source.length; i++) {\n            var item = source[i];\n            if (isArray(item)) {\n                _flattenArray(item, target);\n            }\n            else {\n                target.push(item);\n            }\n        }\n    }\n    return target;\n}\nexport function isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return isArray(obj) ||\n        (!(obj instanceof Map) &&\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nexport function areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[getSymbolIterator()]();\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        let item1 = iterator1.next();\n        let item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nexport function iterateListLike(obj, fn) {\n    if (isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[getSymbolIterator()]();\n        var item;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n// Safari and Internet Explorer do not support the iterable parameter to the\n// Set constructor.  We work around that by manually adding the items.\nvar createSetFromList = (function () {\n    var test = new Set([1, 2, 3]);\n    if (test.size === 3) {\n        return function createSetFromList(lst) { return new Set(lst); };\n    }\n    else {\n        return function createSetAndPopulateFromList(lst) {\n            var res = new Set(lst);\n            if (res.size !== lst.length) {\n                for (var i = 0; i < lst.length; i++) {\n                    res.add(lst[i]);\n                }\n            }\n            return res;\n        };\n    }\n})();\nexport class SetWrapper {\n    static createFromList(lst) { return createSetFromList(lst); }\n    static has(s, key) { return s.has(key); }\n    static delete(m, k) { m.delete(k); }\n}\n//# sourceMappingURL=collection.js.map","export class PromiseCompleter {\n    constructor() {\n        this.promise = new Promise((res, rej) => {\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}\nexport class PromiseWrapper {\n    static resolve(obj) { return Promise.resolve(obj); }\n    static reject(obj, _) { return Promise.reject(obj); }\n    // Note: We can't rename this method into `catch`, as this is not a valid\n    // method name in Dart.\n    static catchError(promise, onError) {\n        return promise.catch(onError);\n    }\n    static all(promises) {\n        if (promises.length == 0)\n            return Promise.resolve([]);\n        return Promise.all(promises);\n    }\n    static then(promise, success, rejection) {\n        return promise.then(success, rejection);\n    }\n    static wrap(computation) {\n        return new Promise((res, rej) => {\n            try {\n                res(computation());\n            }\n            catch (e) {\n                rej(e);\n            }\n        });\n    }\n    static scheduleMicrotask(computation) {\n        PromiseWrapper.then(PromiseWrapper.resolve(null), computation, (_) => { });\n    }\n    static isPromise(obj) { return obj instanceof Promise; }\n    static completer() { return new PromiseCompleter(); }\n}\n//# sourceMappingURL=promise.js.map","import { global, noop } from './lang';\nexport { PromiseWrapper, PromiseCompleter } from './promise';\nimport { Subject } from 'rxjs/Subject';\nimport { PromiseObservable } from 'rxjs/observable/PromiseObservable';\nimport { toPromise } from 'rxjs/operator/toPromise';\nexport { Observable } from 'rxjs/Observable';\nexport { Subject } from 'rxjs/Subject';\nexport class TimerWrapper {\n    static setTimeout(fn, millis) {\n        return global.setTimeout(fn, millis);\n    }\n    static clearTimeout(id) { global.clearTimeout(id); }\n    static setInterval(fn, millis) {\n        return global.setInterval(fn, millis);\n    }\n    static clearInterval(id) { global.clearInterval(id); }\n}\nexport class ObservableWrapper {\n    // TODO(vsavkin): when we use rxnext, try inferring the generic type from the first arg\n    static subscribe(emitter, onNext, onError, onComplete = () => { }) {\n        onError = (typeof onError === \"function\") && onError || noop;\n        onComplete = (typeof onComplete === \"function\") && onComplete || noop;\n        return emitter.subscribe({ next: onNext, error: onError, complete: onComplete });\n    }\n    static isObservable(obs) { return !!obs.subscribe; }\n    /**\n     * Returns whether `obs` has any subscribers listening to events.\n     */\n    static hasSubscribers(obs) { return obs.observers.length > 0; }\n    static dispose(subscription) { subscription.unsubscribe(); }\n    /**\n     * @deprecated - use callEmit() instead\n     */\n    static callNext(emitter, value) { emitter.next(value); }\n    static callEmit(emitter, value) { emitter.emit(value); }\n    static callError(emitter, error) { emitter.error(error); }\n    static callComplete(emitter) { emitter.complete(); }\n    static fromPromise(promise) {\n        return PromiseObservable.create(promise);\n    }\n    static toPromise(obj) { return toPromise.call(obj); }\n}\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Use Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n */\nexport class EventEmitter extends Subject {\n    /**\n     * Creates an instance of [EventEmitter], which depending on [isAsync],\n     * delivers events synchronously or asynchronously.\n     */\n    constructor(isAsync = true) {\n        super();\n        this._isAsync = isAsync;\n    }\n    emit(value) { super.next(value); }\n    /**\n     * @deprecated - use .emit(value) instead\n     */\n    next(value) { super.next(value); }\n    subscribe(generatorOrNext, error, complete) {\n        let schedulerFn;\n        let errorFn = (err) => null;\n        let completeFn = () => null;\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this._isAsync ? (value) => { setTimeout(() => generatorOrNext.next(value)); } :\n                    (value) => { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this._isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                        (err) => { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this._isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                        () => { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this._isAsync ? (value) => { setTimeout(() => generatorOrNext(value)); } :\n                    (value) => { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this._isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this._isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n            }\n        }\n        return super.subscribe(schedulerFn, errorFn, completeFn);\n    }\n}\n//# sourceMappingURL=async.js.map","import { StringMapWrapper, ListWrapper } from './facade/collection';\nimport { isBlank, isPresent, stringify } from './facade/lang';\nexport class Tree {\n    constructor(root) {\n        this._root = root;\n    }\n    get root() { return this._root.value; }\n    parent(t) {\n        let p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    }\n    children(t) {\n        let n = _findNode(t, this._root);\n        return isPresent(n) ? n.children.map(t => t.value) : null;\n    }\n    firstChild(t) {\n        let n = _findNode(t, this._root);\n        return isPresent(n) && n.children.length > 0 ? n.children[0].value : null;\n    }\n    pathFromRoot(t) { return _findPath(t, this._root, []).map(s => s.value); }\n    contains(tree) { return _contains(this._root, tree._root); }\n}\nexport class UrlTree extends Tree {\n    constructor(root) {\n        super(root);\n    }\n}\nexport class RouteTree extends Tree {\n    constructor(root) {\n        super(root);\n    }\n}\nexport function rootNode(tree) {\n    return tree._root;\n}\nfunction _findNode(expected, c) {\n    // TODO: vsavkin remove it once recognize is fixed\n    if (expected instanceof RouteSegment && equalSegments(expected, c.value))\n        return c;\n    if (expected === c.value)\n        return c;\n    for (let cc of c.children) {\n        let r = _findNode(expected, cc);\n        if (isPresent(r))\n            return r;\n    }\n    return null;\n}\nfunction _findPath(expected, c, collected) {\n    collected.push(c);\n    // TODO: vsavkin remove it once recognize is fixed\n    if (_equalValues(expected, c.value))\n        return collected;\n    for (let cc of c.children) {\n        let r = _findPath(expected, cc, ListWrapper.clone(collected));\n        if (isPresent(r))\n            return r;\n    }\n    return null;\n}\nfunction _contains(tree, subtree) {\n    if (!_equalValues(tree.value, subtree.value))\n        return false;\n    for (let subtreeNode of subtree.children) {\n        let s = tree.children.filter(child => _equalValues(child.value, subtreeNode.value));\n        if (s.length === 0)\n            return false;\n        if (!_contains(s[0], subtreeNode))\n            return false;\n    }\n    return true;\n}\nfunction _equalValues(a, b) {\n    if (a instanceof RouteSegment)\n        return equalSegments(a, b);\n    if (a instanceof UrlSegment)\n        return equalUrlSegments(a, b);\n    return a === b;\n}\nexport class TreeNode {\n    constructor(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n}\nexport class UrlSegment {\n    constructor(segment, parameters, outlet) {\n        this.segment = segment;\n        this.parameters = parameters;\n        this.outlet = outlet;\n    }\n    toString() {\n        let outletPrefix = isBlank(this.outlet) ? \"\" : `${this.outlet}:`;\n        let segmentPrefix = isBlank(this.segment) ? \"\" : this.segment;\n        return `${outletPrefix}${segmentPrefix}${_serializeParams(this.parameters)}`;\n    }\n}\nfunction _serializeParams(params) {\n    let res = \"\";\n    if (isPresent(params)) {\n        StringMapWrapper.forEach(params, (v, k) => res += `;${k}=${v}`);\n    }\n    return res;\n}\nexport class RouteSegment {\n    constructor(urlSegments, parameters, outlet, type, componentFactory) {\n        this.urlSegments = urlSegments;\n        this.parameters = parameters;\n        this.outlet = outlet;\n        this._type = type;\n        this._componentFactory = componentFactory;\n    }\n    getParam(param) {\n        return isPresent(this.parameters) ? this.parameters[param] : null;\n    }\n    get type() { return this._type; }\n    get stringifiedUrlSegments() { return this.urlSegments.map(s => s.toString()).join(\"/\"); }\n}\nexport function serializeRouteSegmentTree(tree) {\n    return _serializeRouteSegmentTree(tree._root);\n}\nfunction _serializeRouteSegmentTree(node) {\n    let v = node.value;\n    let children = node.children.map(c => _serializeRouteSegmentTree(c)).join(\", \");\n    return `${v.outlet}:${v.stringifiedUrlSegments}(${stringify(v.type)}) [${children}]`;\n}\nexport function equalSegments(a, b) {\n    if (isBlank(a) && !isBlank(b))\n        return false;\n    if (!isBlank(a) && isBlank(b))\n        return false;\n    if (a._type !== b._type)\n        return false;\n    if (a.outlet != b.outlet)\n        return false;\n    if (isBlank(a.parameters) && !isBlank(b.parameters))\n        return false;\n    if (!isBlank(a.parameters) && isBlank(b.parameters))\n        return false;\n    if (isBlank(a.parameters) && isBlank(b.parameters))\n        return true;\n    return StringMapWrapper.equals(a.parameters, b.parameters);\n}\nexport function equalUrlSegments(a, b) {\n    if (isBlank(a) && !isBlank(b))\n        return false;\n    if (!isBlank(a) && isBlank(b))\n        return false;\n    if (a.segment != b.segment)\n        return false;\n    if (a.outlet != b.outlet)\n        return false;\n    if (isBlank(a.parameters) && !isBlank(b.parameters))\n        return false;\n    if (!isBlank(a.parameters) && isBlank(b.parameters))\n        return false;\n    if (isBlank(a.parameters) && isBlank(b.parameters))\n        return true;\n    return StringMapWrapper.equals(a.parameters, b.parameters);\n}\nexport function routeSegmentComponentFactory(a) {\n    return a._componentFactory;\n}\n//# sourceMappingURL=segments.js.map","import { stringify } from \"../facade/lang\";\nexport class RouteMetadata {\n    get path() { }\n    get component() { }\n}\n/* @ts2dart_const */\nexport class Route {\n    constructor({ path, component } = {}) {\n        this.path = path;\n        this.component = component;\n    }\n    toString() { return `@Route(${this.path}, ${stringify(this.component)})`; }\n}\n/* @ts2dart_const */\nexport class RoutesMetadata {\n    constructor(routes) {\n        this.routes = routes;\n    }\n    toString() { return `@Routes(${this.routes})`; }\n}\n//# sourceMappingURL=metadata.js.map","export const DEFAULT_OUTLET_NAME = \"__DEFAULT\";\n//# sourceMappingURL=constants.js.map","import { RouteSegment, TreeNode, rootNode, RouteTree } from './segments';\nimport { RoutesMetadata } from './metadata/metadata';\nimport { isBlank, isPresent, stringify } from './facade/lang';\nimport { ListWrapper, StringMapWrapper } from './facade/collection';\nimport { PromiseWrapper } from './facade/promise';\nimport { BaseException } from '@angular/core';\nimport { DEFAULT_OUTLET_NAME } from './constants';\nimport { reflector } from '@angular/core';\n// TODO: vsavkin: recognize should take the old tree and merge it\nexport function recognize(componentResolver, type, url) {\n    let matched = new _MatchResult(type, [url.root], null, rootNode(url).children, []);\n    return _constructSegment(componentResolver, matched).then(roots => new RouteTree(roots[0]));\n}\nfunction _recognize(componentResolver, parentType, url) {\n    let metadata = _readMetadata(parentType); // should read from the factory instead\n    if (isBlank(metadata)) {\n        throw new BaseException(`Component '${stringify(parentType)}' does not have route configuration`);\n    }\n    let match;\n    try {\n        match = _match(metadata, url);\n    }\n    catch (e) {\n        return PromiseWrapper.reject(e, null);\n    }\n    let main = _constructSegment(componentResolver, match);\n    let aux = _recognizeMany(componentResolver, parentType, match.aux).then(_checkOutletNameUniqueness);\n    return PromiseWrapper.all([main, aux]).then(ListWrapper.flatten);\n}\nfunction _recognizeMany(componentResolver, parentType, urls) {\n    let recognized = urls.map(u => _recognize(componentResolver, parentType, u));\n    return PromiseWrapper.all(recognized).then(ListWrapper.flatten);\n}\nfunction _constructSegment(componentResolver, matched) {\n    return componentResolver.resolveComponent(matched.component)\n        .then(factory => {\n        let urlOutlet = matched.consumedUrlSegments.length === 0 ||\n            isBlank(matched.consumedUrlSegments[0].outlet) ?\n            DEFAULT_OUTLET_NAME :\n            matched.consumedUrlSegments[0].outlet;\n        let segment = new RouteSegment(matched.consumedUrlSegments, matched.parameters, urlOutlet, matched.component, factory);\n        if (matched.leftOverUrl.length > 0) {\n            return _recognizeMany(componentResolver, matched.component, matched.leftOverUrl)\n                .then(children => [new TreeNode(segment, children)]);\n        }\n        else {\n            return _recognizeLeftOvers(componentResolver, matched.component)\n                .then(children => [new TreeNode(segment, children)]);\n        }\n    });\n}\nfunction _recognizeLeftOvers(componentResolver, parentType) {\n    return componentResolver.resolveComponent(parentType)\n        .then(factory => {\n        let metadata = _readMetadata(parentType);\n        if (isBlank(metadata)) {\n            return [];\n        }\n        let r = metadata.routes.filter(r => r.path == \"\" || r.path == \"/\");\n        if (r.length === 0) {\n            return PromiseWrapper.resolve([]);\n        }\n        else {\n            return _recognizeLeftOvers(componentResolver, r[0].component)\n                .then(children => {\n                return componentResolver.resolveComponent(r[0].component)\n                    .then(factory => {\n                    let segment = new RouteSegment([], null, DEFAULT_OUTLET_NAME, r[0].component, factory);\n                    return [new TreeNode(segment, children)];\n                });\n            });\n        }\n    });\n}\nfunction _match(metadata, url) {\n    for (let r of metadata.routes) {\n        let matchingResult = _matchWithParts(r, url);\n        if (isPresent(matchingResult)) {\n            return matchingResult;\n        }\n    }\n    let availableRoutes = metadata.routes.map(r => `'${r.path}'`).join(\", \");\n    throw new BaseException(`Cannot match any routes. Current segment: '${url.value}'. Available routes: [${availableRoutes}].`);\n}\nfunction _matchWithParts(route, url) {\n    let path = route.path.startsWith(\"/\") ? route.path.substring(1) : route.path;\n    if (path == \"*\") {\n        return new _MatchResult(route.component, [], null, [], []);\n    }\n    let parts = path.split(\"/\");\n    let positionalParams = {};\n    let consumedUrlSegments = [];\n    let lastParent = null;\n    let lastSegment = null;\n    let current = url;\n    for (let i = 0; i < parts.length; ++i) {\n        if (isBlank(current))\n            return null;\n        let p = parts[i];\n        let isLastSegment = i === parts.length - 1;\n        let isLastParent = i === parts.length - 2;\n        let isPosParam = p.startsWith(\":\");\n        if (!isPosParam && p != current.value.segment)\n            return null;\n        if (isLastSegment) {\n            lastSegment = current;\n        }\n        if (isLastParent) {\n            lastParent = current;\n        }\n        if (isPosParam) {\n            positionalParams[p.substring(1)] = current.value.segment;\n        }\n        consumedUrlSegments.push(current.value);\n        current = ListWrapper.first(current.children);\n    }\n    if (isPresent(current) && isBlank(current.value.segment)) {\n        lastParent = lastSegment;\n        lastSegment = current;\n    }\n    let p = lastSegment.value.parameters;\n    let parameters = StringMapWrapper.merge(isBlank(p) ? {} : p, positionalParams);\n    let axuUrlSubtrees = isPresent(lastParent) ? lastParent.children.slice(1) : [];\n    return new _MatchResult(route.component, consumedUrlSegments, parameters, lastSegment.children, axuUrlSubtrees);\n}\nfunction _checkOutletNameUniqueness(nodes) {\n    let names = {};\n    nodes.forEach(n => {\n        let segmentWithSameOutletName = names[n.value.outlet];\n        if (isPresent(segmentWithSameOutletName)) {\n            let p = segmentWithSameOutletName.stringifiedUrlSegments;\n            let c = n.value.stringifiedUrlSegments;\n            throw new BaseException(`Two segments cannot have the same outlet name: '${p}' and '${c}'.`);\n        }\n        names[n.value.outlet] = n.value;\n    });\n    return nodes;\n}\nclass _MatchResult {\n    constructor(component, consumedUrlSegments, parameters, leftOverUrl, aux) {\n        this.component = component;\n        this.consumedUrlSegments = consumedUrlSegments;\n        this.parameters = parameters;\n        this.leftOverUrl = leftOverUrl;\n        this.aux = aux;\n    }\n}\nfunction _readMetadata(componentType) {\n    let metadata = reflector.annotations(componentType).filter(f => f instanceof RoutesMetadata);\n    return ListWrapper.first(metadata);\n}\n//# sourceMappingURL=recognize.js.map","import { TreeNode, UrlSegment, rootNode, UrlTree } from './segments';\nimport { isBlank, isPresent, isString, isStringMap } from './facade/lang';\nimport { ListWrapper } from './facade/collection';\nexport function link(segment, routeTree, urlTree, change) {\n    if (change.length === 0)\n        return urlTree;\n    let startingNode;\n    let normalizedChange;\n    if (isString(change[0]) && change[0].startsWith(\"./\")) {\n        normalizedChange = [\"/\", change[0].substring(2)].concat(change.slice(1));\n        startingNode = _findStartingNode(_findUrlSegment(segment, routeTree), rootNode(urlTree));\n    }\n    else if (isString(change[0]) && change.length === 1 && change[0] == \"/\") {\n        normalizedChange = change;\n        startingNode = rootNode(urlTree);\n    }\n    else if (isString(change[0]) && !change[0].startsWith(\"/\")) {\n        normalizedChange = [\"/\"].concat(change);\n        startingNode = _findStartingNode(_findUrlSegment(segment, routeTree), rootNode(urlTree));\n    }\n    else {\n        normalizedChange = [\"/\"].concat(change);\n        startingNode = rootNode(urlTree);\n    }\n    let updated = _update(startingNode, normalizedChange);\n    let newRoot = _constructNewTree(rootNode(urlTree), startingNode, updated);\n    return new UrlTree(newRoot);\n}\nfunction _findUrlSegment(segment, routeTree) {\n    let s = segment;\n    let res = null;\n    while (isBlank(res)) {\n        res = ListWrapper.last(s.urlSegments);\n        s = routeTree.parent(s);\n    }\n    return res;\n}\nfunction _findStartingNode(segment, node) {\n    if (node.value === segment)\n        return node;\n    for (var c of node.children) {\n        let r = _findStartingNode(segment, c);\n        if (isPresent(r))\n            return r;\n    }\n    return null;\n}\nfunction _constructNewTree(node, original, updated) {\n    if (node === original) {\n        return new TreeNode(node.value, updated.children);\n    }\n    else {\n        return new TreeNode(node.value, node.children.map(c => _constructNewTree(c, original, updated)));\n    }\n}\nfunction _update(node, changes) {\n    let rest = changes.slice(1);\n    let outlet = _outlet(changes);\n    let segment = _segment(changes);\n    if (isString(segment) && segment[0] == \"/\")\n        segment = segment.substring(1);\n    // reach the end of the tree => create new tree nodes.\n    if (isBlank(node)) {\n        let urlSegment = new UrlSegment(segment, null, outlet);\n        let children = rest.length === 0 ? [] : [_update(null, rest)];\n        return new TreeNode(urlSegment, children);\n    }\n    else if (outlet != node.value.outlet) {\n        return node;\n    }\n    else {\n        let urlSegment = isStringMap(segment) ? new UrlSegment(null, segment, null) :\n            new UrlSegment(segment, null, outlet);\n        if (rest.length === 0) {\n            return new TreeNode(urlSegment, []);\n        }\n        return new TreeNode(urlSegment, _updateMany(ListWrapper.clone(node.children), rest));\n    }\n}\nfunction _updateMany(nodes, changes) {\n    let outlet = _outlet(changes);\n    let nodesInRightOutlet = nodes.filter(c => c.value.outlet == outlet);\n    if (nodesInRightOutlet.length > 0) {\n        let nodeRightOutlet = nodesInRightOutlet[0]; // there can be only one\n        nodes[nodes.indexOf(nodeRightOutlet)] = _update(nodeRightOutlet, changes);\n    }\n    else {\n        nodes.push(_update(null, changes));\n    }\n    return nodes;\n}\nfunction _segment(changes) {\n    if (!isString(changes[0]))\n        return changes[0];\n    let parts = changes[0].toString().split(\":\");\n    return parts.length > 1 ? parts[1] : changes[0];\n}\nfunction _outlet(changes) {\n    if (!isString(changes[0]))\n        return null;\n    let parts = changes[0].toString().split(\":\");\n    return parts.length > 1 ? parts[0] : null;\n}\n//# sourceMappingURL=link.js.map","import { Type, isBlank } from './facade/lang';\nexport function hasLifecycleHook(name, obj) {\n    if (isBlank(obj))\n        return false;\n    let type = obj.constructor;\n    if (!(type instanceof Type))\n        return false;\n    return name in type.prototype;\n}\n//# sourceMappingURL=lifecycle_reflector.js.map","import { provide, ReflectiveInjector } from '@angular/core';\nimport { isBlank, isPresent } from './facade/lang';\nimport { ListWrapper } from './facade/collection';\nimport { EventEmitter, PromiseWrapper, ObservableWrapper } from './facade/async';\nimport { StringMapWrapper } from './facade/collection';\nimport { BaseException } from '@angular/core';\nimport { recognize } from './recognize';\nimport { link } from './link';\nimport { equalSegments, routeSegmentComponentFactory, RouteSegment, RouteTree, rootNode, TreeNode, UrlSegment } from './segments';\nimport { hasLifecycleHook } from './lifecycle_reflector';\nimport { DEFAULT_OUTLET_NAME } from './constants';\nexport class RouterOutletMap {\n    constructor() {\n        /** @internal */\n        this._outlets = {};\n    }\n    registerOutlet(name, outlet) { this._outlets[name] = outlet; }\n}\nexport class Router {\n    constructor(_rootComponent, _rootComponentType, _componentResolver, _urlSerializer, _routerOutletMap, _location) {\n        this._rootComponent = _rootComponent;\n        this._rootComponentType = _rootComponentType;\n        this._componentResolver = _componentResolver;\n        this._urlSerializer = _urlSerializer;\n        this._routerOutletMap = _routerOutletMap;\n        this._location = _location;\n        this._changes = new EventEmitter();\n        this._prevTree = this._createInitialTree();\n        this._setUpLocationChangeListener();\n        this.navigateByUrl(this._location.path());\n    }\n    get urlTree() { return this._urlTree; }\n    navigateByUrl(url) {\n        return this._navigate(this._urlSerializer.parse(url));\n    }\n    navigate(changes, segment) {\n        return this._navigate(this.createUrlTree(changes, segment));\n    }\n    dispose() { ObservableWrapper.dispose(this._locationSubscription); }\n    _createInitialTree() {\n        let root = new RouteSegment([new UrlSegment(\"\", null, null)], null, DEFAULT_OUTLET_NAME, this._rootComponentType, null);\n        return new RouteTree(new TreeNode(root, []));\n    }\n    _setUpLocationChangeListener() {\n        this._locationSubscription = this._location.subscribe((change) => { this._navigate(this._urlSerializer.parse(change['url'])); });\n    }\n    _navigate(url) {\n        this._urlTree = url;\n        return recognize(this._componentResolver, this._rootComponentType, url)\n            .then(currTree => {\n            return new _LoadSegments(currTree, this._prevTree)\n                .load(this._routerOutletMap, this._rootComponent)\n                .then(updated => {\n                if (updated) {\n                    this._prevTree = currTree;\n                    this._location.go(this._urlSerializer.serialize(this._urlTree));\n                    this._changes.emit(null);\n                }\n            });\n        });\n    }\n    createUrlTree(changes, segment) {\n        if (isPresent(this._prevTree)) {\n            let s = isPresent(segment) ? segment : this._prevTree.root;\n            return link(s, this._prevTree, this.urlTree, changes);\n        }\n        else {\n            return null;\n        }\n    }\n    serializeUrl(url) { return this._urlSerializer.serialize(url); }\n    get changes() { return this._changes; }\n    get routeTree() { return this._prevTree; }\n}\nclass _LoadSegments {\n    constructor(currTree, prevTree) {\n        this.currTree = currTree;\n        this.prevTree = prevTree;\n        this.deactivations = [];\n        this.performMutation = true;\n    }\n    load(parentOutletMap, rootComponent) {\n        let prevRoot = isPresent(this.prevTree) ? rootNode(this.prevTree) : null;\n        let currRoot = rootNode(this.currTree);\n        return this.canDeactivate(currRoot, prevRoot, parentOutletMap, rootComponent)\n            .then(res => {\n            this.performMutation = true;\n            if (res) {\n                this.loadChildSegments(currRoot, prevRoot, parentOutletMap, [rootComponent]);\n            }\n            return res;\n        });\n    }\n    canDeactivate(currRoot, prevRoot, outletMap, rootComponent) {\n        this.performMutation = false;\n        this.loadChildSegments(currRoot, prevRoot, outletMap, [rootComponent]);\n        let allPaths = PromiseWrapper.all(this.deactivations.map(r => this.checkCanDeactivatePath(r)));\n        return allPaths.then((values) => values.filter(v => v).length === values.length);\n    }\n    checkCanDeactivatePath(path) {\n        let curr = PromiseWrapper.resolve(true);\n        for (let p of ListWrapper.reversed(path)) {\n            curr = curr.then(_ => {\n                if (hasLifecycleHook(\"routerCanDeactivate\", p)) {\n                    return p.routerCanDeactivate(this.prevTree, this.currTree);\n                }\n                else {\n                    return _;\n                }\n            });\n        }\n        return curr;\n    }\n    loadChildSegments(currNode, prevNode, outletMap, components) {\n        let prevChildren = isPresent(prevNode) ?\n            prevNode.children.reduce((m, c) => {\n                m[c.value.outlet] = c;\n                return m;\n            }, {}) :\n            {};\n        currNode.children.forEach(c => {\n            this.loadSegments(c, prevChildren[c.value.outlet], outletMap, components);\n            StringMapWrapper.delete(prevChildren, c.value.outlet);\n        });\n        StringMapWrapper.forEach(prevChildren, (v, k) => this.unloadOutlet(outletMap._outlets[k], components));\n    }\n    loadSegments(currNode, prevNode, parentOutletMap, components) {\n        let curr = currNode.value;\n        let prev = isPresent(prevNode) ? prevNode.value : null;\n        let outlet = this.getOutlet(parentOutletMap, currNode.value);\n        if (equalSegments(curr, prev)) {\n            this.loadChildSegments(currNode, prevNode, outlet.outletMap, components.concat([outlet.loadedComponent]));\n        }\n        else {\n            this.unloadOutlet(outlet, components);\n            if (this.performMutation) {\n                let outletMap = new RouterOutletMap();\n                let loadedComponent = this.loadNewSegment(outletMap, curr, prev, outlet);\n                this.loadChildSegments(currNode, prevNode, outletMap, components.concat([loadedComponent]));\n            }\n        }\n    }\n    loadNewSegment(outletMap, curr, prev, outlet) {\n        let resolved = ReflectiveInjector.resolve([provide(RouterOutletMap, { useValue: outletMap }), provide(RouteSegment, { useValue: curr })]);\n        let ref = outlet.load(routeSegmentComponentFactory(curr), resolved, outletMap);\n        if (hasLifecycleHook(\"routerOnActivate\", ref.instance)) {\n            ref.instance.routerOnActivate(curr, prev, this.currTree, this.prevTree);\n        }\n        return ref.instance;\n    }\n    getOutlet(outletMap, segment) {\n        let outlet = outletMap._outlets[segment.outlet];\n        if (isBlank(outlet)) {\n            if (segment.outlet == DEFAULT_OUTLET_NAME) {\n                throw new BaseException(`Cannot find default outlet`);\n            }\n            else {\n                throw new BaseException(`Cannot find the outlet ${segment.outlet}`);\n            }\n        }\n        return outlet;\n    }\n    unloadOutlet(outlet, components) {\n        if (isPresent(outlet) && outlet.isLoaded) {\n            StringMapWrapper.forEach(outlet.outletMap._outlets, (v, k) => this.unloadOutlet(v, components));\n            if (this.performMutation) {\n                outlet.unload();\n            }\n            else {\n                this.deactivations.push(components.concat([outlet.loadedComponent]));\n            }\n        }\n    }\n}\n//# sourceMappingURL=router.js.map","import { __core_private__ } from '@angular/core';\nexport var makeDecorator = __core_private__.makeDecorator;\n//# sourceMappingURL=core_private.js.map","import { RoutesMetadata } from \"./metadata\";\nimport { makeDecorator } from '../core_private';\nexport var Routes = makeDecorator(RoutesMetadata);\n//# sourceMappingURL=decorators.js.map","import { UrlSegment, TreeNode, rootNode, UrlTree } from './segments';\nimport { BaseException } from '@angular/core';\nimport { isBlank, isPresent, RegExpWrapper } from './facade/lang';\nexport class RouterUrlSerializer {\n}\nexport class DefaultRouterUrlSerializer extends RouterUrlSerializer {\n    parse(url) {\n        let root = new _UrlParser().parse(url);\n        return new UrlTree(root);\n    }\n    serialize(tree) { return _serializeUrlTreeNode(rootNode(tree)); }\n}\nfunction _serializeUrlTreeNode(node) {\n    return `${node.value}${_serializeChildren(node)}`;\n}\nfunction _serializeUrlTreeNodes(nodes) {\n    let main = nodes[0].value.toString();\n    let auxNodes = nodes.slice(1);\n    let aux = auxNodes.length > 0 ? `(${auxNodes.map(_serializeUrlTreeNode).join(\"//\")})` : \"\";\n    let children = _serializeChildren(nodes[0]);\n    return `${main}${aux}${children}`;\n}\nfunction _serializeChildren(node) {\n    if (node.children.length > 0) {\n        let slash = isBlank(node.children[0].value.segment) ? \"\" : \"/\";\n        return `${slash}${_serializeUrlTreeNodes(node.children)}`;\n    }\n    else {\n        return \"\";\n    }\n}\nvar SEGMENT_RE = RegExpWrapper.create('^[^\\\\/\\\\(\\\\)\\\\?;=&#]+');\nfunction matchUrlSegment(str) {\n    var match = RegExpWrapper.firstMatch(SEGMENT_RE, str);\n    return isPresent(match) ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = RegExpWrapper.create('^[^\\\\(\\\\)\\\\?;&#]+');\nfunction matchUrlQueryParamValue(str) {\n    var match = RegExpWrapper.firstMatch(QUERY_PARAM_VALUE_RE, str);\n    return isPresent(match) ? match[0] : '';\n}\nclass _UrlParser {\n    peekStartsWith(str) { return this._remaining.startsWith(str); }\n    capture(str) {\n        if (!this._remaining.startsWith(str)) {\n            throw new BaseException(`Expected \"${str}\".`);\n        }\n        this._remaining = this._remaining.substring(str.length);\n    }\n    parse(url) {\n        this._remaining = url;\n        if (url == '' || url == '/') {\n            return new TreeNode(new UrlSegment('', null, null), []);\n        }\n        else {\n            return this.parseRoot();\n        }\n    }\n    parseRoot() {\n        let segments = this.parseSegments();\n        let queryParams = this.peekStartsWith('?') ? this.parseQueryParams() : null;\n        return new TreeNode(new UrlSegment('', queryParams, null), segments);\n    }\n    parseSegments(outletName = null) {\n        if (this._remaining.length == 0) {\n            return [];\n        }\n        if (this.peekStartsWith('/')) {\n            this.capture('/');\n        }\n        var path = matchUrlSegment(this._remaining);\n        this.capture(path);\n        if (path.indexOf(\":\") > -1) {\n            let parts = path.split(\":\");\n            outletName = parts[0];\n            path = parts[1];\n        }\n        var matrixParams = null;\n        if (this.peekStartsWith(';')) {\n            matrixParams = this.parseMatrixParams();\n        }\n        var aux = [];\n        if (this.peekStartsWith('(')) {\n            aux = this.parseAuxiliaryRoutes();\n        }\n        var children = [];\n        if (this.peekStartsWith('/') && !this.peekStartsWith('//')) {\n            this.capture('/');\n            children = this.parseSegments();\n        }\n        if (isPresent(matrixParams)) {\n            let matrixParamsSegment = new UrlSegment(null, matrixParams, null);\n            let matrixParamsNode = new TreeNode(matrixParamsSegment, children);\n            let segment = new UrlSegment(path, null, outletName);\n            return [new TreeNode(segment, [matrixParamsNode].concat(aux))];\n        }\n        else {\n            let segment = new UrlSegment(path, null, outletName);\n            let node = new TreeNode(segment, children);\n            return [node].concat(aux);\n        }\n    }\n    parseQueryParams() {\n        var params = {};\n        this.capture('?');\n        this.parseQueryParam(params);\n        while (this._remaining.length > 0 && this.peekStartsWith('&')) {\n            this.capture('&');\n            this.parseQueryParam(params);\n        }\n        return params;\n    }\n    parseMatrixParams() {\n        var params = {};\n        while (this._remaining.length > 0 && this.peekStartsWith(';')) {\n            this.capture(';');\n            this.parseParam(params);\n        }\n        return params;\n    }\n    parseParam(params) {\n        var key = matchUrlSegment(this._remaining);\n        if (isBlank(key)) {\n            return;\n        }\n        this.capture(key);\n        var value = \"true\";\n        if (this.peekStartsWith('=')) {\n            this.capture('=');\n            var valueMatch = matchUrlSegment(this._remaining);\n            if (isPresent(valueMatch)) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[key] = value;\n    }\n    parseQueryParam(params) {\n        var key = matchUrlSegment(this._remaining);\n        if (isBlank(key)) {\n            return;\n        }\n        this.capture(key);\n        var value = \"true\";\n        if (this.peekStartsWith('=')) {\n            this.capture('=');\n            var valueMatch = matchUrlQueryParamValue(this._remaining);\n            if (isPresent(valueMatch)) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[key] = value;\n    }\n    parseAuxiliaryRoutes() {\n        var segments = [];\n        this.capture('(');\n        while (!this.peekStartsWith(')') && this._remaining.length > 0) {\n            segments = segments.concat(this.parseSegments(\"aux\"));\n            if (this.peekStartsWith('//')) {\n                this.capture('//');\n            }\n        }\n        this.capture(')');\n        return segments;\n    }\n}\n//# sourceMappingURL=router_url_serializer.js.map","import { ComponentResolver } from '@angular/core';\nimport { LocationStrategy, PathLocationStrategy, Location } from '@angular/common';\nimport { Router, RouterOutletMap } from './router';\nimport { RouterUrlSerializer, DefaultRouterUrlSerializer } from './router_url_serializer';\nimport { ApplicationRef } from '@angular/core';\nimport { BaseException } from '@angular/core';\nexport const ROUTER_PROVIDERS_COMMON = [\n    RouterOutletMap,\n    /*@ts2dart_Provider*/ { provide: RouterUrlSerializer, useClass: DefaultRouterUrlSerializer },\n    /*@ts2dart_Provider*/ { provide: LocationStrategy, useClass: PathLocationStrategy }, Location,\n    /*@ts2dart_Provider*/ {\n        provide: Router,\n        useFactory: routerFactory,\n        deps: /*@ts2dart_const*/ [ApplicationRef, ComponentResolver, RouterUrlSerializer, RouterOutletMap, Location],\n    },\n];\nfunction routerFactory(app, componentResolver, urlSerializer, routerOutletMap, location) {\n    if (app.componentTypes.length == 0) {\n        throw new BaseException(\"Bootstrap at least one component before injecting Router.\");\n    }\n    // TODO: vsavkin this should not be null\n    let router = new Router(null, app.componentTypes[0], componentResolver, urlSerializer, routerOutletMap, location);\n    app.registerDisposeListener(() => router.dispose());\n    return router;\n}\n//# sourceMappingURL=router_providers_common.js.map","import { ROUTER_PROVIDERS_COMMON } from './router_providers_common';\nimport { BrowserPlatformLocation } from '@angular/platform-browser';\nimport { PlatformLocation } from '@angular/common';\nexport const ROUTER_PROVIDERS = [\n    ROUTER_PROVIDERS_COMMON,\n    /*@ts2dart_Provider*/ { provide: PlatformLocation, useClass: BrowserPlatformLocation },\n];\n//# sourceMappingURL=router_providers.js.map","import { Directive, ViewContainerRef, Attribute, ReflectiveInjector } from '@angular/core';\nimport { RouterOutletMap } from '../router';\nimport { DEFAULT_OUTLET_NAME } from '../constants';\nimport { isPresent, isBlank } from '../facade/lang';\nexport class RouterOutlet {\n    constructor(parentOutletMap, _location, name) {\n        this._location = _location;\n        parentOutletMap.registerOutlet(isBlank(name) ? DEFAULT_OUTLET_NAME : name, this);\n    }\n    unload() {\n        this._loaded.destroy();\n        this._loaded = null;\n    }\n    get loadedComponent() { return isPresent(this._loaded) ? this._loaded.instance : null; }\n    get isLoaded() { return isPresent(this._loaded); }\n    load(factory, providers, outletMap) {\n        this.outletMap = outletMap;\n        let inj = ReflectiveInjector.fromResolvedProviders(providers, this._location.parentInjector);\n        this._loaded = this._location.createComponent(factory, this._location.length, inj, []);\n        return this._loaded;\n    }\n}\nRouterOutlet.decorators = [\n    { type: Directive, args: [{ selector: 'router-outlet' },] },\n];\nRouterOutlet.ctorParameters = [\n    { type: RouterOutletMap, },\n    { type: ViewContainerRef, },\n    { type: undefined, decorators: [{ type: Attribute, args: ['name',] },] },\n];\n//# sourceMappingURL=router_outlet.js.map","import { Directive, HostListener, HostBinding, Input, Optional } from '@angular/core';\nimport { Router } from '../router';\nimport { RouteSegment } from '../segments';\nimport { isString, isPresent } from '../facade/lang';\nimport { ObservableWrapper } from '../facade/async';\nexport class RouterLink {\n    constructor(_routeSegment, _router) {\n        this._routeSegment = _routeSegment;\n        this._router = _router;\n        this._changes = [];\n        this.isActive = false;\n        this._subscription =\n            ObservableWrapper.subscribe(_router.changes, (_) => { this._updateTargetUrlAndHref(); });\n    }\n    ngOnDestroy() { ObservableWrapper.dispose(this._subscription); }\n    set routerLink(data) {\n        this._changes = data;\n        this._updateTargetUrlAndHref();\n    }\n    onClick() {\n        if (!isString(this.target) || this.target == '_self') {\n            this._router.navigate(this._changes, this._routeSegment);\n            return false;\n        }\n        return true;\n    }\n    _updateTargetUrlAndHref() {\n        let tree = this._router.createUrlTree(this._changes, this._routeSegment);\n        if (isPresent(tree)) {\n            this.href = this._router.serializeUrl(tree);\n            this.isActive = this._router.urlTree.contains(tree);\n        }\n        else {\n            this.isActive = false;\n        }\n    }\n}\nRouterLink.decorators = [\n    { type: Directive, args: [{ selector: '[routerLink]' },] },\n];\nRouterLink.ctorParameters = [\n    { type: RouteSegment, decorators: [{ type: Optional },] },\n    { type: Router, },\n];\nRouterLink.propDecorators = {\n    'target': [{ type: Input },],\n    'href': [{ type: HostBinding },],\n    'isActive': [{ type: HostBinding, args: ['class.router-link-active',] },],\n    'routerLink': [{ type: Input },],\n    'onClick': [{ type: HostListener, args: [\"click\",] },],\n};\n//# sourceMappingURL=router_link.js.map","/**\n* @module\n* @description\n* Alternative implementation of the router. Experimental.\n*/\nexport { Router, RouterOutletMap } from './src/router';\nexport { RouteSegment, UrlSegment, Tree, UrlTree, RouteTree } from './src/segments';\nexport { Routes } from './src/metadata/decorators';\nexport { Route } from './src/metadata/metadata';\nexport { RouterUrlSerializer, DefaultRouterUrlSerializer } from './src/router_url_serializer';\nexport { ROUTER_PROVIDERS } from './src/router_providers';\nimport { RouterOutlet } from './src/directives/router_outlet';\nimport { RouterLink } from './src/directives/router_link';\nexport const ROUTER_DIRECTIVES = [RouterOutlet, RouterLink];\n//# sourceMappingURL=index.js.map"],"names":["_global","global","Map","toPromise","PromiseObservable","Subject","BaseException","reflector","provide","ReflectiveInjector","__core_private__","Location","ComponentResolver","ApplicationRef","PathLocationStrategy","LocationStrategy","BrowserPlatformLocation","PlatformLocation","Directive","Attribute","ViewContainerRef","Optional","HostListener","Input","HostBinding"],"mappings":"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"}